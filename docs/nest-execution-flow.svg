<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" width="1200" height="720" viewBox="0 0 1200 720" font-family="-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Inter, Arial, sans-serif">
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="10" refY="5" orient="auto">
      <path d="M 0 0 L 10 5 L 0 10 z" fill="#555" />
    </marker>
    <style><![CDATA[
      .title { font-size: 20px; font-weight: 700; fill: #111; }
      .subtitle { font-size: 13px; fill: #666; }
      .box { fill: #fff; stroke: #555; stroke-width: 1.2; rx: 8; ry: 8; }
      .box-acc { fill: #f7faff; stroke: #3b82f6; }
      .box-warn { fill: #fff9f0; stroke: #f59e0b; }
      .label { font-size: 13px; fill: #111; }
      .note { font-size: 12px; fill: #666; }
      .line { stroke: #555; stroke-width: 1.2; fill: none; marker-end: url(#arrow); }
      .dash { stroke-dasharray: 6 4; }
    ]]></style>
  </defs>

  <!-- Background -->
  <rect x="0" y="0" width="1200" height="720" fill="#ffffff" />

  <!-- Header -->
  <text x="40" y="36" class="title">NestJS Request Lifecycle</text>
  <text x="40" y="56" class="subtitle">From incoming HTTP request to response</text>

  <!-- Row 1 boxes -->
  <!-- Coordinates -->
  <!-- y1 = 110; width = 160; height = 48; gap = 24 -->
  <g transform="translate(40, 110)">
    <rect class="box" width="140" height="48" />
    <text class="label" x="70" y="30" text-anchor="middle">Request</text>
  </g>

  <g transform="translate(204, 110)">
    <rect class="box" width="200" height="48" />
    <text class="label" x="100" y="22" text-anchor="middle">Platform Middleware</text>
    <text class="note" x="100" y="38" text-anchor="middle">(Express/Fastify)</text>
  </g>

  <g transform="translate(428, 110)">
    <rect class="box" width="180" height="48" />
    <text class="label" x="90" y="30" text-anchor="middle">Nest Middleware</text>
  </g>

  <g transform="translate(632, 110)">
    <rect class="box box-acc" width="120" height="48" />
    <text class="label" x="60" y="30" text-anchor="middle">Guards</text>
  </g>

  <g transform="translate(776, 110)">
    <rect class="box box-acc" width="160" height="48" />
    <text class="label" x="80" y="22" text-anchor="middle">Interceptors (pre)</text>
    <text class="note" x="80" y="38" text-anchor="middle">wrap handler</text>
  </g>

  <g transform="translate(960, 110)">
    <rect class="box box-acc" width="120" height="48" />
    <text class="label" x="60" y="30" text-anchor="middle">Pipes</text>
  </g>

  <!-- Row 2 boxes -->
  <!-- y2 = 250 -->
  <g transform="translate(40, 250)">
    <rect class="box box-acc" width="180" height="48" />
    <text class="label" x="90" y="22" text-anchor="middle">Controller Handler</text>
    <text class="note" x="90" y="38" text-anchor="middle">(route method)</text>
  </g>

  <g transform="translate(248, 250)">
    <rect class="box" width="200" height="48" />
    <text class="label" x="100" y="22" text-anchor="middle">Providers / Services</text>
    <text class="note" x="100" y="38" text-anchor="middle">business logic via DI</text>
  </g>

  <g transform="translate(480, 250)">
    <rect class="box box-acc" width="160" height="48" />
    <text class="label" x="80" y="22" text-anchor="middle">Interceptors (post)</text>
    <text class="note" x="80" y="38" text-anchor="middle">transform/tap</text>
  </g>

  <g transform="translate(672, 250)">
    <rect class="box box-warn" width="180" height="48" />
    <text class="label" x="90" y="22" text-anchor="middle">Exception Filters</text>
    <text class="note" x="90" y="38" text-anchor="middle">error formatting</text>
  </g>

  <g transform="translate(884, 250)">
    <rect class="box" width="160" height="48" />
    <text class="label" x="80" y="30" text-anchor="middle">Response</text>
  </g>

  <!-- Flow lines Row1 -->
  <path class="line" d="M 180 134 L 204 134" />
  <path class="line" d="M 404 134 L 428 134" />
  <path class="line" d="M 608 134 L 632 134" />
  <path class="line" d="M 752 134 L 776 134" />
  <path class="line" d="M 936 134 L 960 134" />

  <!-- From Pipes down to Controller Handler -->
  <path class="line" d="M 1020 158 L 1020 210 L 220 210 L 220 250" />

  <!-- Row2 lines -->
  <path class="line" d="M 220 274 L 248 274" />
  <path class="line" d="M 448 274 L 480 274" />
  <path class="line" d="M 640 274 L 672 274" />
  <path class="line" d="M 852 274 L 884 274" />

  <!-- Error paths (dashed) from Guards/Pipes/Handler to Filters -->
  <path class="line dash" d="M 692 158 L 692 210 L 762 210 L 762 250" />
  <path class="line dash" d="M 1020 158 L 1020 210 L 762 210 L 762 250" />
  <path class="line dash" d="M 130 274 L 130 210 L 762 210 L 762 250" />

  <!-- Legend -->
  <g transform="translate(40, 330)">
    <rect class="box" width="560" height="120" />
    <text class="label" x="12" y="22">Legend</text>
    <rect class="box-acc" x="12" y="36" width="16" height="16" />
    <text class="note" x="36" y="48">
      <tspan x="36" dy="0">Nest request-phase components (Guards, Pipes,</tspan>
      <tspan x="36" dy="16">Interceptors, Handler)</tspan>
    </text>
    <rect class="box-warn" x="12" y="74" width="16" height="16" />
    <text class="note" x="36" y="86">Exception Filters (handle thrown errors)</text>
  </g>

  <!-- Divider -->
  <path d="M 40 440 L 1160 440" stroke="#e5e7eb" stroke-width="1" />

  <!-- App Startup Section -->
  <text x="40" y="472" class="title">NestJS App Startup (one-time)</text>
  <text x="40" y="492" class="subtitle">High-level order at boot</text>

  <!-- Startup steps -->
  <g transform="translate(40, 515)">
    <rect class="box" width="280" height="48" />
    <text class="label" x="14" y="30">1) Modules resolved (AppModule + feature modules)</text>
  </g>
  <path class="line" d="M 180 563 L 180 575" />
  <g transform="translate(40, 575)">
    <rect class="box" width="280" height="48" />
    <text class="label" x="14" y="30">2) DI container builds providers</text>
  </g>
  <path class="line" d="M 180 623 L 180 635" />
  <g transform="translate(40, 635)">
    <rect class="box" width="280" height="48" />
    <text class="label" x="14" y="22">3) Middleware registered, controllers/routes created</text>
    <text class="note" x="14" y="38">then server starts listening</text>
  </g>

  <!-- Footer note -->
  <text class="note" x="40" y="700">Scope precedence summary: Guards/Interceptors (global → controller → route), Pipes (global → controller → route → parameter), Filters (method → controller → global). Middleware runs before these and is not caught by filters.</text>
</svg>
